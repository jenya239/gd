<?xml version="1.0" ?>
<screens:BaseScreen
        xmlns:mx="http://www.adobe.com/2006/mxml" 
        xmlns:screens="com.turbostool.client.screens.*"
        creationComplete="onCreationComplete()"
        width="607" height="590"
        backgroundColor="#000000"
        backgroundAlpha="0.5"
        >
	<mx:Image horizontalCenter="-1" source="@Embed('/assets/gui/screens/levelUp/lvlupBkg1.png')" top="16"/>
	<mx:Label text="{level}" fontFamily="Arial" fontWeight="bold" textAlign="center" color="#FFFFFF" fontSize="48" width="82" top="75" left="350"/>
	<mx:Label text="{str('chooseReward')}" fontFamily="Arial" fontWeight="bold" textAlign="center" width="143" fontSize="14" color="#FFFFFF" horizontalCenter="91" verticalCenter="-122"/>
    
	<mx:Image id="money" source="@Embed('/assets/gui/screens/levelUp/moneyPrize.png')" click="onPrizeClick('money')" rollOverEffect="{money != _selected ? prizeGlowIn : null}" rollOutEffect="{money != _selected ? prizeGlowOut : null}"  left="221" top="196"/>
	<mx:Image id="item" source="@Embed('/assets/gui/screens/levelUp/itemPrize.png')" click="onPrizeClick('item')" rollOverEffect="{item != _selected ? prizeGlowIn : null}" rollOutEffect="{item != _selected ? prizeGlowOut : null}"  left="337" top="196"/>
	<mx:Image id="nitro" source="@Embed('/assets/gui/screens/levelUp/nitroPrize.png')" click="onPrizeClick('nitro')" rollOverEffect="{nitro != _selected ? prizeGlowIn : null}" rollOutEffect="{nitro != _selected ? prizeGlowOut : null}"  left="454" top="196"/>

	<mx:Label text="{moneyString}" fontFamily="Arial" color="#FFFFFF" fontWeight="bold" textAlign="center" fontSize="12" y="298" x="220" width="110"/>
	<mx:Text text="{itemName.length > 0 ? itemName.toLocaleUpperCase() : str('loading')}" fontFamily="Arial" color="#FFFFFF" fontWeight="bold" textAlign="center" fontSize="12" x="337" y="298" width="110"/>
	<mx:Label text="{nitroCount > 0 ? nitroCount + ' ' + str('charges') : str('loading')}" fontFamily="Arial" color="#FFFFFF" fontWeight="bold" textAlign="center" fontSize="12" x="454" y="298" width="110"/>
	<mx:Button label="{str('next')}" top="358" click="onNextClick()" enabled="true"
	           styleName="redWhite" fontWeight="normal" fontFamily="Arial" height="27" left="494" width="81"/>
    
    <mx:Script><![CDATA[
        import com.turbostool.client.event.EventManager;
        import com.turbostool.client.game.view.ModalManager;
        import com.turbostool.client.model.LevelUpInfo;
        import com.turbostool.client.net.SessionSocket;

        import com.turbostool.client.net.messages.LevelUpInfoRequest;
        import com.turbostool.client.net.messages.LevelUpInfoResponse;
        import com.turbostool.client.net.messages.LevelUpPrizeRequest;

        import com.turbostool.client.net.messages.LevelUpPrizeResponse;

        import com.turbostool.client.net.messages.LevelUpRewardsResponse;
        import com.turbostool.client.net.messages.ServerResponseEvent;

        import com.turbostool.client.utils.Utils;

        import mx.controls.Alert;
        import mx.effects.Glow;
        import mx.managers.PopUpManager;

        private function onCreationComplete():void {
            prizeGlowIn = new Glow();
            prizeGlowIn2 = new Glow();
            prizeGlowOut = new Glow();

            prizeGlowIn.color = 0xf4da89;
            prizeGlowIn.alphaFrom = 0.1;
            prizeGlowIn.alphaTo = 0.5;
            prizeGlowIn.duration = 100;
            prizeGlowIn.blurYFrom = 0;
            prizeGlowIn.blurXFrom = 0;
            prizeGlowIn.blurYTo = 10;
            prizeGlowIn.blurXTo = 10;

            prizeGlowOut.color = 0xf4da89;
            prizeGlowOut.alphaFrom = 0.5;
            prizeGlowOut.alphaTo = 0.1;
            prizeGlowOut.duration = 800;
            prizeGlowOut.blurYFrom = 10;
            prizeGlowOut.blurXFrom = 10;
            prizeGlowOut.blurYTo = 0;
            prizeGlowOut.blurXTo = 0;

            prizeGlowIn2.color = 0xf4da89;
            prizeGlowIn2.alphaFrom = 0.1;
            prizeGlowIn2.alphaTo = 0.7;
            prizeGlowIn2.duration = 100;
            prizeGlowIn2.blurYFrom = 0;
            prizeGlowIn2.blurXFrom = 0;
            prizeGlowIn2.blurYTo = 20;
            prizeGlowIn2.blurXTo = 20;
        }

        private function onLevelUpRewards(event: ServerResponseEvent):void {
            EventManager.instance.removeEventListener(LevelUpRewardsResponse.LEVEL_UP_REWARDS, onLevelUpRewards);
            var response: LevelUpRewardsResponse = LevelUpRewardsResponse(event.response);

            virtMoney = response.money;
            realMoney = response.realMoney;
            itemName = response.itemName;
            nitroCount = response.nitroCount;
        }

        public function subscribe():void {
            EventManager.instance.addEventListener(LevelUpRewardsResponse.LEVEL_UP_REWARDS, onLevelUpRewards);
        }

        [Bindable(event="updateMoneyString")]
        private function get moneyString(): String {
            if(_realMoney > 0) {
                return Utils.formatPrice(_realMoney, true);
            } else if(_virtMoney > 0) {
                return Utils.formatPrice(_virtMoney, false);
            } else {
                return str('loading');
            }
        }

        private function onPrizeClick(type: String): void {
            if (_selected != null)
                prizeGlowIn2.play([_selected], true);

            if (type == 'money') {
                _selected = money;
            } else if (type == 'item') {
                _selected = item;
            } else if (type == 'nitro') {
                _selected = nitro;
            }

            prizeGlowIn2.play([_selected]);
        }

        [Bindable]
        public var level: Number;

        [Bindable]
        private var _selected: Image;

        private var _realMoney: Number;
        private var _virtMoney: Number;

        [Bindable]
        public var itemName: String;

        [Bindable]
        public var nitroCount: Number;

        [Bindable]
        private var prizeGlowIn: Glow;

        [Bindable]
        private var prizeGlowIn2: Glow;

        [Bindable]
        private var prizeGlowOut: Glow;

        public function set realMoney(value:Number):void {
            _realMoney = value;

            dispatchEvent(new Event("updateMoneyString"));
        }

        public function set virtMoney(value:Number):void {
            _virtMoney = value;

            dispatchEvent(new Event("updateMoneyString"));
        }

        private function onLevelUpInfo(event: ServerResponseEvent): void {
            EventManager.instance.removeEventListener(LevelUpInfoResponse.LEVEL_UP_INFO, onLevelUpInfo);

            hideLoadingIndicator();

            dispatchEvent(new Event('modalClose'));

            var response: LevelUpInfoResponse = LevelUpInfoResponse(event.response);

            if(response.isOK) {
                var lvlup: LevelUpScreen2 = new LevelUpScreen2();
                lvlup.modelsStorage = modelsStorage;

                lvlup.levelUpInfo = new LevelUpInfo();
                lvlup.levelUpInfo.newUpgrades = response.newUpgrades;
                lvlup.levelUpInfo.newRoutes = response.newRoutes;
                lvlup.levelUpInfo.newCars = response.newCarsCollection;
                lvlup.levelUpInfo.message = response.message;

                ModalManager.instance.addModalWindow(lvlup, "modalClose");
            } else {
                Alert.show(response.message);
            }
        }

        private function onLevelUpPrize(event: ServerResponseEvent): void {
            EventManager.instance.removeEventListener(LevelUpPrizeResponse.LEVEL_UP_PRIZE, onLevelUpPrize);

            var response: LevelUpPrizeResponse = LevelUpPrizeResponse(event.response);

            PopUpManager.removePopUp(loadingIndicator);

            if (!response.isOK) {
                Alert.show(response.message);
            } else {
                modelsStorage.userInfo = response.userInfo;
                
                EventManager.instance.addEventListener(LevelUpInfoResponse.LEVEL_UP_INFO, onLevelUpInfo)
                showLoadingIndicator();

                SessionSocket.instance.sendMessage(new LevelUpInfoRequest(modelsStorage.userInfo.level));
            }
        }

        private function onNextClick(): void {
            if (_selected == null) {
                Alert.show("Выберите награду");
            } else {
                EventManager.instance.addEventListener(LevelUpPrizeResponse.LEVEL_UP_PRIZE, onLevelUpPrize);

                PopUpManager.addPopUp(loadingIndicator, this, true);
                PopUpManager.centerPopUp(loadingIndicator);
                PopUpManager.bringToFront(loadingIndicator);

                SessionSocket.instance.sendMessage(new LevelUpPrizeRequest(level, _selected.id));
            }
        }

        ]]></mx:Script>
</screens:BaseScreen>