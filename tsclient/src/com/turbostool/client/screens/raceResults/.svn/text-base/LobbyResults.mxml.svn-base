<?xml version="1.0" ?>
<BaseScreen
        xmlns="com.turbostool.client.screens.*"
        xmlns:raceResults="com.turbostool.client.screens.raceResults.*"
        xmlns:mx="http://www.adobe.com/2006/mxml"
        width="609" height="590"
        backgroundColor="0x000000"
        backgroundAlpha="0.8"
        verticalScrollPolicy="off"
        >
    <mx:Script><![CDATA[
        import com.turbostool.client.lobbies.LobbiesController;
        import com.turbostool.client.model.LobbyInfo;
        import com.turbostool.client.model.LobbyRaceResult;
        import com.turbostool.client.net.messages.LobbyRaceResultsMessage;

        private var _results:Array;
        private var _upgrades:Array;

        [Bindable]
        public var isDuel:Boolean = false;

        [Bindable]
        public var lobbiesController: LobbiesController;

        [Bindable]
        private var _lobbyResultMessage:LobbyRaceResultsMessage;

        public function set resultMessage(lobbyResultMessage:LobbyRaceResultsMessage):void
        {
            results = lobbyResultMessage.results;
            upgrades = lobbyResultMessage.wearOutUpgrades;
            _lobbyResultMessage = lobbyResultMessage;
        }

        private function get userId():int
        {
            return Client.instance.modelsStorage.userInfo.id;
        }

        [Bindable]
        public function get results():Array
        {
            return _results;
        }

        private static const RESULTS_CHANGE:String = "resultsChange";


        public function set results(val:Array):void
        {
            _results = val;
            startCountdown();
            dispatchEvent(new Event(RESULTS_CHANGE))
        }

        [Bindable(event="resultsChange")]
        public function get userResult(): LobbyRaceResult
        {
            var userResult: LobbyRaceResult;
            for (var i: int = 0; i < _results.length; i++)
            {
                userResult = _results[i];
                if (userResult.userID == userId) break;
            }
            return userResult;
        }

        public function get upgrades():Array
        {
            return _upgrades;
        }

        [Bindable]
        public function set upgrades(val:Array):void
        {
            _upgrades = val;
        }

        private function startCountdown(): void
        {
        }

        private function onNextClick(): void
        {
            if (vs.selectedIndex == 0)
            {
                vs.selectedIndex = 1
            }
            else
            {
                dispatchEvent(new Event(Event.CLOSE));
            }
        }
        ]]></mx:Script>
    <mx:Style source="/styles.css"/>
    <mx:ViewStack id="vs" horizontalCenter="0" top="10">
        <mx:ViewStack selectedIndex="{ isDuel ? 1 : 0 }">
            <raceResults:PlayerResults id="commonLobbyResult"
                                       position="{userResult.position}"
                                       money="{userResult.money}"
                                       rating="{userResult.newRating - userResult.oldRating}"
                                       score="{userResult.score}"
                                       blueTeam="{_lobbyResultMessage.blueScore}"
                                       redTeam="{_lobbyResultMessage.redScore}"
                                       experience="{userResult.experience}"
                                       currentState="{lobbiesController.lobbyInfo.type == LobbyInfo.LOBBY_TYPE_TEAM ? 'team' : ''}"
                    />
            <raceResults:DuelResult id="duelResult" results="{results}"/>
        </mx:ViewStack>
        <raceResults:AllResults results="{results}"
                                upgrades="{upgrades}"
                                fuelValue="{Client.instance.modelsStorage.userInfo.fuel}"
                                fuelCapacity="{Client.instance.modelsStorage.userInfo.carInfo.fuelCapacity}"
                                userResult="{userResult}"/>
    </mx:ViewStack>
    <mx:Button id="btnNext" label="{str('next')}" horizontalCenter="160" top="400" click="onNextClick()" enabled="true"
               styleName="redWhite"/>
</BaseScreen>