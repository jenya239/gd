<?xml version="1.0" ?>
<screens:BaseScreen
        xmlns:mx="http://www.adobe.com/2006/mxml"
        xmlns:screens="com.turbostool.client.screens.*"
        xmlns:controls="com.turbostool.controls.*"
        backgroundColor="#FFFFFF"
        width="530">
    <mx:Script><![CDATA[
        import com.turbostool.client.Tracker;
        import com.turbostool.client.event.EventManager;
        import com.turbostool.client.game.view.ModalManager;
        import com.turbostool.client.net.SessionSocket;
        import com.turbostool.client.net.messages.ExchangeVkontakteVotesRequest;
        import com.turbostool.client.net.messages.ExchangeVkontakteVotesResponse;
        import com.turbostool.client.net.messages.ServerResponseEvent;

        import mx.controls.Alert;
        import mx.managers.PopUpManager;

				//по сути вызывается, когда добавлены недостающие голоса (из vkontakte wrapper)
        private function onBalanceChanged(e: Object):void
        {
            Client.instance.wrapper.removeEventListener("onBalanceChanged", onBalanceChanged);
            sendWithdrawRequest(votes.value);
        }

        private function sendWithdrawRequest(votes: Number):void
        {
            EventManager.instance.addEventListener(ExchangeVkontakteVotesResponse.EXCHANGE_VKONTAKTE_VOTES, onExchangeResponse);
            SessionSocket.instance.sendMessage(new ExchangeVkontakteVotesRequest(votes));
            PopUpManager.addPopUp(loadingIndicator, this, true);
            PopUpManager.centerPopUp(loadingIndicator);
            PopUpManager.bringToFront(loadingIndicator);
        }

        private function onExchangeClick(): void
        {
            if (int(modelsStorage.vkontakteInfo.userAppBalance) >= votes.value)
            {
                sendWithdrawRequest(votes.value);
            } else
            {
                Client.instance.wrapper.addEventListener("onBalanceChanged", onBalanceChanged);
                Client.instance.wrapper.external.showPaymentBox(votes.value - int(modelsStorage.vkontakteInfo.userAppBalance));
            }

            Tracker.instance.trackEvent("exchangeVotes", "request", "exchange", votes.value);
        }

        private function onExchangeResponse(event: ServerResponseEvent): void
        {
            EventManager.instance.removeEventListener(ExchangeVkontakteVotesResponse.EXCHANGE_VKONTAKTE_VOTES, onExchangeResponse);
            PopUpManager.removePopUp(loadingIndicator);
            var response: ExchangeVkontakteVotesResponse = event.response as ExchangeVkontakteVotesResponse;
            ModalManager.instance.closeAllWindows();
            if (response.isOK)
            {
                modelsStorage.userInfo = response.userInfo;
                Alert.show("Голоса успешно переведены!");

                Tracker.instance.trackEvent("exchangeVotes", "successful", "" + response.votes, response.votes);
            }
            else
            {
                Alert.show("Ошибка обмена: " + response.message);

                Tracker.instance.trackEvent("exchangeVotes", "failure", response.message);
            }
        }

        ]]></mx:Script>

    <mx:Canvas horizontalCenter="0" width="500" height="147" top="20">
        <mx:Label x="10" y="48" text="{str('youConvert')}" fontSize="11" color="#000000" fontFamily="Tahoma"/>
        <mx:NumericStepper id="votes" x="118" y="46" width="79"
                           value="{modelsStorage.vkontakteInfo.userAppBalance > 0 ? modelsStorage.vkontakteInfo.userAppBalance : 10}"
                           minimum="1"
                           maximum="10000" fontFamily="Tahoma" fontSize="11"/>
        <mx:Label x="205" y="48"
                  text="голосов в {votes.value * modelsStorage.globalInfo.vkontakteExchangeRate} золотых" fontSize="11"
                  color="#000000" fontFamily="Tahoma"/>
        <mx:Button label="{str('transfer')}" click="onExchangeClick()" width="86" height="27" styleName="vkontakte" fontWeight="normal"
                   letterSpacing="0" fontSize="11" horizontalCenter="-63" cornerRadius="0" fontFamily="Tahoma"
                   top="102"/>
        <mx:Label x="10" text="1 голос = {modelsStorage.globalInfo.vkontakteExchangeRate} золотых" color="#545454"
                  fontSize="11" top="75" fontFamily="Tahoma"/>
        <mx:Button label="{str('close')}" width="86" color="#000000" right="144" cornerRadius="0"
                   click="{dispatchEvent(new Event('modalClose'))}" fontWeight="normal" fontFamily="Tahoma"
                   fontSize="11" top="103" height="27"/>
        <controls:Rectangle height="30" top="-1" right="0" left="0" backgroundColor2="#4b7c9c" cornerRadius="0"/>
        <mx:Label y="4" text="{str('refillAccount')}" horizontalCenter="0" fontSize="14" fontWeight="bold" color="#FFFFFF" fontFamily="Tahoma"/>
    </mx:Canvas>
</screens:BaseScreen>