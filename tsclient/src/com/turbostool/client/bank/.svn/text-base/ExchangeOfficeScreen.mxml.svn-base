<?xml version="1.0" ?>
<screens:BaseScreen
        xmlns:mx="http://www.adobe.com/2006/mxml"
        xmlns:screens="com.turbostool.client.screens.*"
        backgroundColor="#151D12"
         xmlns:controls="com.turbostool.controls.*">
        
        <!--mx:Image y="-2" source="assets/gui/screens/bank/B_1.jpg" horizontalCenter="0" alpha="0.46"/-->
        <controls:Rectangle x="5.5" y="30.8" width="28" height="28" backgroundColor2="#FBF4F4" cornerRadius="28" borderColor2="#E98D09" borderWidth="1"/>
        <controls:Rectangle x="5.5" y="94.8" width="28" height="28" backgroundColor2="#FBF4F4" cornerRadius="28" borderColor2="#E98D09" borderWidth="1"/>
        <controls:Rectangle x="5.5" y="158" width="28" height="28" backgroundColor2="#FBF4F4" cornerRadius="28" borderColor2="#E98D09" borderWidth="1"/>
        <mx:Label x="11.5" y="30" text="$" fontWeight="bold" fontFamily="Arial" fontSize="22"/>
        <mx:Label x="11.5" y="94" text="$" fontWeight="bold" fontFamily="Arial" fontSize="22"/>
        <controls:Rectangle x="5.5" y="221.75" width="28" height="28" backgroundColor2="#FBF4F4" cornerRadius="28" borderColor2="#E98D09" borderWidth="1"/>
        <mx:Label x="13.5" y="219" text="-" fontWeight="bold" fontFamily="Arial" fontSize="22"/>
        
    <mx:Label x="2.5" y="4" text="{str('gold')}" color="#FFFFFF" fontWeight="bold" fontFamily="Arial" fontSize="11"/>
    <mx:Label x="2.5" y="67" text="{str('creditsCaption')}" color="#FFFFFF" fontWeight="bold" fontFamily="Arial" fontSize="11"/>
    <mx:Label x="2.5" y="130" text="{str('rate')}" color="#FFFFFF" fontWeight="bold" fontFamily="Arial" fontSize="11"/>
    <mx:Label x="2.5" y="194" text="{str('fee')}" color="#FFFFFF" fontWeight="bold" fontFamily="Arial" fontSize="11"/>
    <mx:Label x="35.5" y="30" text="{Utils.formatPrice(modelsStorage.userInfo.realMoney, true, 0)}" color="#FFFFFF" fontWeight="bold" fontSize="23" fontFamily="Arial"/>
    <mx:Label x="34.5" y="93" text="{Utils.formatPrice(modelsStorage.userInfo.money, false, 0)}" color="#FFFFFF" fontWeight="bold" fontSize="23" fontFamily="Arial"/>
    <mx:Label x="34.5" y="153" text="{Utils.formatPrice(1, true, 0)}={Utils.formatPrice(modelsStorage.globalInfo.exchangeRate, false, 0)}" color="#FFFFFF" fontWeight="bold" fontSize="23" fontFamily="Arial"/>
    <mx:Label x="34.5" y="220" text="{Utils.round(modelsStorage.globalInfo.commissionRate*100, 0)}%" color="#FFFFFF" fontWeight="bold" fontSize="23" fontFamily="Arial"/>
    <mx:Button y="30" label="{str('change')}" styleName="Registration" click="onClick()" height="31" enabled="true" right="10"/>
    <mx:Button y="30" label="{str('refill')}" styleName="Registration" click="onDepositClick()" height="31" enabled="true" right="107"/>
    
    <mx:Image x="6.5" y="160" source="@Embed(source='/assets/gui/screens/bank/rateIcon.png')"/>
    <mx:HRule y="66" strokeColor="#C4CCCC" height="1" strokeWidth="1" left="0" right="0"/>
    <mx:HRule strokeColor="#C4CCCC" height="1" strokeWidth="1" y="130" left="0" right="0"/>
    <mx:HRule y="192" strokeColor="#C4CCCC" height="1" strokeWidth="1" left="0" right="0"/>

    <mx:Script><![CDATA[
        import com.turbostool.client.event.EventManager;
        import com.turbostool.client.game.view.ModalManager;
        import com.turbostool.client.model.VkontakteInfo;
        import com.turbostool.client.net.SessionSocket;
        import com.turbostool.client.net.messages.GetPropertyRequest;
        import com.turbostool.client.net.messages.GetPropertyResponse;
        import com.turbostool.client.net.messages.ServerResponseEvent;
        import com.turbostool.client.utils.Utils;

        import mx.controls.Alert;
        import mx.managers.PopUpManager;

        private function onDepositClick(): void
        {
            EventManager.instance.addEventListener(GetPropertyResponse.GET_VKONTAKTEINFO_RESPONSE, onVkontakteInfo);
            SessionSocket.instance.sendMessage(new GetPropertyRequest(GetPropertyRequest.VKONTAKTE_INFO));
            PopUpManager.addPopUp(loadingIndicator, this, true);
            PopUpManager.centerPopUp(loadingIndicator);
            PopUpManager.bringToFront(loadingIndicator);
        }

        private function onVkontakteInfo(event: ServerResponseEvent): void
        {
            EventManager.instance.removeEventListener(GetPropertyResponse.GET_VKONTAKTEINFO_RESPONSE, onVkontakteInfo);
            PopUpManager.removePopUp(loadingIndicator);
            ModalManager.instance.closeAllWindows();
            var response: GetPropertyResponse = event.response as GetPropertyResponse;
            if (response.isOK)
            {
                modelsStorage.vkontakteInfo = response.property as VkontakteInfo;
                //trace("onVkontakteInfo");
                //trace("onVkontakteInfo: userID = " + modelsStorage.userInfo.id + ", votes = " + modelsStorage.vkontakteInfo.userAppBalance);
                if (!Client.instance.isAPIWrapper)
                {
                    var vkontakteInstructions: VkontakteInstructions = new VkontakteInstructions();
                    vkontakteInstructions.modelsStorage = modelsStorage;
                    ModalManager.instance.addModalWindow(vkontakteInstructions, "modalClose");
                }
                else
                {
                    var convert: VkontakteConvertVotes = new VkontakteConvertVotes();
                    convert.modelsStorage = modelsStorage;
                    ModalManager.instance.addModalWindow(convert, "modalClose");
                }
            }
            else
            {
                Alert.show(str("error") + ": " + response.message);
            }
        }

        private function onClick():void
        {
            if (modelsStorage.userInfo.realMoney > 0)
            {
                var exchangePopUp: ExchangePopUp = new ExchangePopUp();
                exchangePopUp.modelsStorage = modelsStorage;
                ModalManager.instance.addModalWindow(exchangePopUp, "modalClose");
            }
            else
            {
                Alert.show(str("notEnoughGoldUseRefill"));
            }
        }

        ]]></mx:Script>

</screens:BaseScreen>