<?xml version="1.0" ?>
<mx:Text
        xmlns:mx="http://www.adobe.com/2006/mxml"
        selectable="true"
        fontFamily="Arial"
        fontSize="11"
        paddingTop="-4"
        paddingBottom="-5"
        leading="2"
        link="linkHandler(event);"
        fontAntiAliasType="normal"
        dataChange="createMenu()"
        >

    <mx:htmlText>
        {wrapDate(data.timestamp as Date, "#2e0702") + wrapNick(createNickLink(data), 
	  (data.admin == "true") ? "#842481" : (data.homeCity == 2 ? "#c12f20" : "#2427c1") ) +
        wrapText(String(data.text),
        "#2e0702")}
    </mx:htmlText>


    <mx:Script><![CDATA[
        import flash.events.TextEvent;

        import mx.controls.Alert;
        import mx.events.CloseEvent;

        private function onAlertClose15min(event: CloseEvent): void {
            if (event.detail == Alert.YES) {
                ban(data.userId, 15);
            }
        }

        private function onAlertClose1h(event: CloseEvent): void {
            if (event.detail == Alert.YES) {
                ban(data.userId, 60);
            }
        }

        private function onAlertClose1d(event: CloseEvent): void {
            if (event.detail == Alert.YES) {
                ban(data.userId, 24*60);
            }
        }

        private function onAlertClose1w(event: CloseEvent): void {
            if (event.detail == Alert.YES) {
                ban(data.userId, 7*24*60);
            }
        }

        private function onAlertClose1m(event: CloseEvent): void {
            if (event.detail == Alert.YES) {
                ban(data.userId, 30*24*60);
            }
        }

        private function ban(userID: int, minutes: int): void {
            parentDocument.sendBanRequest(userID, minutes*60*1000);
        }

        private function tryBan(minutes: int, handler: Function):void {
            Alert.show("Забанить " + data.nick + " на " + minutes + " минут?", "Бан", Alert.YES | Alert.NO, this, handler);
        }

        private function onMenuItemClickNick(event:ContextMenuEvent):void {
            parentDocument.handleNickClick(data.nick, data.userId);
        }

        private function onMenuItemClick15min(event:ContextMenuEvent):void {
            tryBan(15, onAlertClose15min);
        }

        private function onMenuItemClick1h(event:ContextMenuEvent):void {
            tryBan(60, onAlertClose1h);
        }

        private function onMenuItemClick1d(event:ContextMenuEvent):void {
            tryBan(60*24, onAlertClose1d);
        }

        private function onMenuItemClick1w(event:ContextMenuEvent):void {
            tryBan(7*60*24, onAlertClose1w);
        }

        private function onMenuItemClick1m(event:ContextMenuEvent):void {
            tryBan(30*60*24, onAlertClose1m);
        }

        private function createMenu():void
        {
            var menu: ContextMenu = new ContextMenu();
            this.contextMenu = menu;
            if (data != null && !isNaN(data.userId)) {
                var menuItemNick: ContextMenuItem = new ContextMenuItem(String(data.nick));
                menuItemNick.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClickNick);
                if (!parentDocument.modelsStorage.userInfo.hasRole("admin") || parentDocument.modelsStorage.userInfo.id == data.userId) {
                    menu.customItems = [menuItemNick];
                    return;
                } else {
                    var menuItemBan15min: ContextMenuItem = new ContextMenuItem("Бан на 15 минут");
                    var menuItemBan1hour: ContextMenuItem = new ContextMenuItem("Бан на 1 час");
                    var menuItemBan1day: ContextMenuItem = new ContextMenuItem("Бан на сутки");
                    var menuItemBan1week: ContextMenuItem = new ContextMenuItem("Бан на неделю");
                    var menuItemBan1month: ContextMenuItem = new ContextMenuItem("Бан на месяц");
                    menu.customItems = [menuItemNick, menuItemBan15min, menuItemBan1hour, menuItemBan1day, menuItemBan1week, menuItemBan1month];

                    menuItemBan15min.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClick15min);
                    menuItemBan1hour.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClick1h);
                    menuItemBan1day.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClick1d);
                    menuItemBan1week.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClick1w);
                    menuItemBan1month.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onMenuItemClick1m);
                }
            }
        }

        private function linkHandler(e:TextEvent):void
        {
            parentDocument.handleNickClick(e.text, data.userId);
        }

        private function wrapNick(nick: String, color: String): String
        {
            var nickColor: String = color;
            if(isNaN(data.userId) || data.userId < 0)
                nickColor = "#006530";

            return "<b><font face='Arial' size='11' color='" + nickColor + "'>" + nick + ": </font></b>";
        }

        private function createNickLink(chatInfo:Object):String
        {
            return (isNaN(data.userId) || data.userId < 0) ? String(chatInfo.nick) : "<a href='event:nick'><u>" + String(chatInfo.nick) + "</u></a>";
        }

        private function wrapText(text: String, color: String): String
        {
            return "<font face='Arial' size='11' color='" + color + "'>" + text + "</font>";
        }

        private function int2str(value: int): String
        {
            return value < 10 ? "0" + value : "" + value;
        }

        private function wrapDate(date: Date, color: String): String
        {
            var dateStr: String = "";
            var dateNow: Date = new Date();
            if (date.date != dateNow.date || date.month != dateNow.month || date.fullYear != dateNow.fullYear)
            {
                dateStr = int2str(date.date) + "." + int2str(date.month + 1) + "." + date.fullYear + " ";
            }
            dateStr += int2str(date.hours) + ":" + int2str(date.minutes);

            return "<b><font face='Arial' size='11' color='" + color + "'>[" + dateStr + "]</font></b> ";
        }

        ]]></mx:Script>
</mx:Text>
